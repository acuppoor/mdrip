@{
    ViewBag.Title = "Dashboard";
}
<div class="row alert alert-danger" style="margin-top:65px;">
    <div class="col-md-12 bold">
        Placeholder for alerts
    </div>
</div>
<hr/>

<div class="row padding-left-right">
    <div class="col-md-4">
        <div class="small-box bg-light">
            <h6>Map
            <i class="fa fa-expand"></i>
            </h6>
            <hr/>
            <div id="geographicmap" class="scatterplot viscomponent"></div>

            <a href="#" class="small-box-footer bg-dark">More info <i class="fa fa-arrow-circle-right"></i></a>
        </div>
    </div>
    <div class="col-md-4">
        <div class="small-box bg-light">
            <h6>Choropleth Map</h6>
            <hr/>
            <div id="choroplethmap" class="scatterplot viscomponent"></div>

            <a href="#" class="small-box-footer bg-dark">More info <i class="fa fa-arrow-circle-right"></i></a>
        </div>
    </div>
    <div class="col-md-4">
        <div class="small-box bg-light">
            <h6>Scatter Plot</h6>
            <hr/>
            <div id="scatterplot" class="scatterplot viscomponent"></div>

            <a href="#" class="small-box-footer bg-dark">More info <i class="fa fa-arrow-circle-right"></i></a>
        </div>
    </div>
</div>

<div class="row padding-left-right">
    <div class="col-md-4">
        <div class="small-box bg-light">
            <h6>Line Graph</h6>
            <hr/>
            <div id="linegraph" class="viscomponent"></div>
            <a href="#" class="small-box-footer bg-dark">More info <i class="fa fa-arrow-circle-right"></i></a>
        </div>
    </div>
    <div class="col-md-4">
        <div class="small-box bg-light">
            <h6>Bar Chart</h6>
            <hr/>
            <div id="bar" class="viscomponent"></div>
            <a href="#" class="small-box-footer bg-dark">More info <i class="fa fa-arrow-circle-right"></i></a>
        </div>
    </div>
    <div class="col-md-4">
        <div class="small-box bg-light">
            <h6>Pie Chart</h6>
            <hr/>
            <div id="donut" class="viscomponent"></div>

            <a href="#" class="small-box-footer bg-dark">More info <i class="fa fa-arrow-circle-right"></i></a>
        </div>
    </div>
</div>


<script
  src="https://code.jquery.com/jquery-3.3.1.slim.min.js"
  integrity="sha256-3edrmyuQ0w65f8gfBsqowzjJe2iM6n0nKciPUp8y+7E="
  crossorigin="anonymous"></script>

<script type="text/javascript" src="https://d3js.org/d3.v4.min.js"></script>
<script src="~/Scripts/script/raphael.min.js"></script>
<script src="~/Scripts/script/morris.min.js"></script>
<script src="https://cdn.plot.ly/plotly-latest.min.js"></script>


<script>
    // Line Graph code
    Morris.Line({
        element: 'linegraph',
        data: [
            { x: '2018-01', y: 100 },
            { x: '2018-02', y: 0 },
            { x: '2018-03', y: 0},
            { x: '2018-04', y: 345 },
            { x: '2018-05', y: 0 },
            { x: '2018-06', y: 200 },
            { x: '2018-07', y: 50 },
            { x: '2018-08', y: 0 }
        ],
        xkey: 'x',
        ykeys: ['y'],
        smooth: false,
        hideHover: 'auto',
        axes: true,
        grid: true,
        labels: ['Prevalence']
    });

    Morris.Bar({
        element: 'bar',
        data: [
            { y: 'Islamabad', a: 100},
            { y: 'Region 2', a: 75},
            { y: 'Region 3', a: 50},
            { y: 'Region 4', a: 75},
            { y: 'Region 5', a: 50},
            { y: 'Region 6', a: 75},
            { y: 'Region 7', a: 100 }
        ],
        xkey: 'y',
        ykeys: ['a'],
        hideHover: 'auto',
        labels: ['Prevalence']
    });

    // Donut/piechart code
    dataset = {
            "children": [{"Name":"Olives","Count":4319},
                {"Name":"Tea","Count":4159},
                {"Name":"Mashed Potatoes","Count":2583},
                {"Name":"Boiled Potatoes","Count":2074},
                {"Name":"Milk","Count":1894},
                {"Name":"Chicken Salad","Count":1809},
                {"Name":"Vanilla Ice Cream","Count":1713},
                {"Name":"Cocoa","Count":1636},
                {"Name":"Lettuce Salad","Count":1566},
                {"Name":"Lobster Salad","Count":1511},
                {"Name":"Chocolate","Count":1489},
                {"Name":"Apple Pie","Count":1487},
                {"Name":"Orange Juice","Count":1423},
                {"Name":"American Cheese","Count":1372},
                {"Name":"Green Peas","Count":1341},
                {"Name":"Assorted Cakes","Count":1331},
                {"Name":"French Fried Potatoes","Count":1328},
                {"Name":"Potato Salad","Count":1306},
                {"Name":"Baked Potatoes","Count":1293},
                {"Name":"Roquefort","Count":1273},
                {"Name":"Stewed Prunes","Count":1268}]
        };

    var diameter = 600;
    var color = d3.scaleOrdinal(d3.schemeCategory20);

    var bubble = d3.pack(dataset)
        .size([diameter, diameter])
        .padding(1.5);

    var svg = d3.select(".bubble")
        .append("svg")
        .attr("width", diameter)
        .attr("height", diameter)
        .attr("class", "bubble");

    var nodes = d3.hierarchy(dataset)
        .sum(function(d) { return d.Count; });

    var node = svg.selectAll(".node")
        .data(bubble(nodes).descendants())
        .enter()
        .filter(function(d){
            return  !d.children
        })
        .append("g")
        .attr("class", "node")
        .attr("transform", function(d) {
            return "translate(" + d.x + "," + d.y + ")";
        });

    node.append("title")
        .text(function(d) {
            return d.Name + ": " + d.Count;
        });

    node.append("circle")
        .attr("r", function(d) {
            return d.r;
        })
        .style("fill", function(d,i) {
            return color(i);
        });

    node.append("text")
        .attr("dy", ".2em")
        .style("text-anchor", "middle")
        .text(function(d) {
            return d.data.Name.substring(0, d.r / 3);
        })
        .attr("font-family", "sans-serif")
        .attr("font-size", function(d){
            return d.r/5;
        })
        .attr("fill", "white");

    node.append("text")
        .attr("dy", "1.3em")
        .style("text-anchor", "middle")
        .text(function(d) {
            return d.data.Count;
        })
        .attr("font-family",  "Gill Sans", "Gill Sans MT")
        .attr("font-size", function(d){
            return d.r/5;
        })
        .attr("fill", "white");

    d3.select(self.frameElement)
        .style("height", diameter + "px");

    Morris.Donut({
      element: 'donut',
      data: [
        {label: "Download Sales", value: 12},
        {label: "In-Store Sales", value: 30},
        {label: "Mail-Order Sales", value: 20}
      ]
    });

    // Scatter plot code
    var regions = ['Region1', 'Region2', 'Region3', 'Region4', 'Region5', 'Region6']
    var trace1 = {
        x: regions,
        y: [1, 2, 3,4 ,5 ],
        mode: 'markers',
        type: 'scatter',
        name: 'Infection A',
        text: ['A-1', 'A-2', 'A-3', 'A-4', 'A-5'],
        marker: { size: 12 }
    };

    var trace2 = {
        x: regions,
        y: [1, 3, 4, 5, 6],
        mode: 'markers',
        type: 'scatter',
        name: 'Infection B',
        text: ['B-a', 'B-b', 'B-c', 'B-d', 'B-e'],
        marker: { size: 12 }
    };

    var data = [ trace1, trace2];

    var layout = {
      xaxis: {
        range: [ -1, 6 ]
      },
      yaxis: {
        range: [0, 8]
      },
      title:'Prevalence at Different Regions'
    };

    Plotly.newPlot('scatterplot', data, layout);

    
    function renderMaps() {
    
        var mapProp = {
            center: new google.maps.LatLng(30.3, 69.3),
            zoom: 5,
            styles: [
                {
                    "featureType": "administrative",
                    "elementType": "geometry",
                    "stylers": [
                        {
                            "visibility": "off"
                        }
                    ]
                },
                {
                    "featureType": "poi",
                    "stylers": [
                        {
                            "visibility": "off"
                        }
                    ]
                },
                {
                    "featureType": "road",
                    "elementType": "labels.icon",
                    "stylers": [
                        {
                            "visibility": "off"
                        }
                    ]
                },
                {
                    "featureType": "transit",
                    "stylers": [
                        {
                            "visibility": "off"
                        }
                    ]
                }
            ]
        };
        var mapOne = new google.maps.Map(document.getElementById("choroplethmap"), mapProp);
        var infowindow = new google.maps.InfoWindow();
        mapOne.data.addListener('mouseover', function (event) {
            infowindow.setContent("<div style='width:150px; text-align: center;'>" + "Test" + "</div>");

            @*var coordOne = event.feature.getGeometry().getAt(0).getAt(0).getAt(0);
            var newLat = (coordOne.lat() + event.latLng.lat()) / 2;
            var newLng = (coordOne.lng() + event.latLng.lng()) / 2;
            var newCoord = new google.maps.LatLng(newLat, newLng);*@

            infowindow.setPosition(event.latLng);
            infowindow.setOptions({ pixelOffset: new google.maps.Size(0,0) });
            infowindow.open(mapOne);
        }); 
        mapOne.data.loadGeoJson('@Url.Content("~/Assets/map/pakistan.json")');

    /////////////////
        
        var mapTwo = new google.maps.Map(document.getElementById("geographicmap"), mapProp);
        @*map.data.loadGeoJson('@Url.Content("~/Assets/map/pak.json")');*@
       
        var image = {
            url: '@Url.Content("~/Assets/map/icon.png")',
            size: new google.maps.Size(15, 15)
        }

        var contentString = '<div id="content">' +
            '<div id="siteNotice">' +
            '</div>' +
            '<h5 id="firstHeading" class="firstHeading">Toxin-medicated Diseases of S.Aureus S</h5><h6>Introduction of the infection</h6>'+
            '<div id="bodyContent">' +
            '<p><b>Prevalence: 125</b>,<br/>' +
            '<b>Mortality: 35</b>,<br/>' +
            '<b>Bateria: Staphylococcus Aureus (Anaerobic)</b>,<br/>' +
            '<b>Infection: Toxin-medicated diseases of S.Aureus include food poisoning' +
            'due to ingestion of enterotoxins, while toxic shock syndrome toxin 1 is responsible for toxic shock.,</b >,<br /></p>' +
            '<p><table style="width:100%"> <tr> <td>'+
                    'Timeline: June 2005 - September 2005<br /> </td> <td>'+
                    'Affected People: <Gender> and <Age><br /> </td> </tr> <tr> <td> Strain: -- <br />' +
            '    </td> <td> Taxonomy: --<br /> </td> </tr> <tr> <td> Morphology: --<br />  </td> <td> Virulence Factors: --<br />' +
            '    </td> </tr> <tr> <td> Interaction with Organisms: -- <br /> </td> <td> Antibiotics: -- <br /> </td> </tr>'+
            '<tr> <td> Treatments: -- <br /> </td>'+
            '</tr></table></p>' +
            '<p>Location: Military Hospital, Rawalpindi, Pakistan (<a href="#">Lat: 30.3, Long: 60.3</a>)</p>' + 
            '<a href="#">See References</p>' +
            '</div>' +
            '</div>';

        var marker = new google.maps.Marker({
            position: { lat: 30.3, lng: 69.3 },
            map: mapTwo,
            icon: image
        });
        var infowindowTwo = new google.maps.InfoWindow({
            content: contentString,
            maxWidth: 400
        });
        var isOpen = false;
        var isClicked = false;

        google.maps.event.addListener(infowindowTwo, 'closeclick', function () {
            isOpen = false;
            isClicked = false;
        });

        marker.addListener('mouseover', function () {
            if (!isClicked) {
                infowindowTwo.open(mapTwo, marker);
                isOpen = true;
            }
        });
        marker.addListener('mouseout', function () {
            if (isOpen && !isClicked) {
                isOpen = false;
                infowindowTwo.close();
            }
        });

        marker.addListener('click', function () {
            isOpen = false;
            isClicked = true;
            infowindowTwo.open(mapTwo, marker);
        });
    }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDb6BqMVbPU5a6zxYg88S7AQcfoPbkhEaU&callback=renderMaps"></script>
